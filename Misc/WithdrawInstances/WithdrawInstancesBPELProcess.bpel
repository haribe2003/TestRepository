<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun Nov 15 14:32:44 EST 2015
  Author:  I4TR1HS
  Type: BPEL 2.0 Process
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="WithdrawInstancesBPELProcess"
         targetNamespace="http://xmlns.oracle.com/Misc/WithdrawInstances/WithdrawInstancesBPELProcess"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/Misc/WithdrawInstances/WithdrawInstancesBPELProcess"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/bpel/workflow/taskQueryService"
         xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns2="http://xmlns.oracle.com/bpel/workflow/common"
         xmlns:ns3="http://xmlns.oracle.com/bpel/workflow/taskService"
         xmlns:ns5="http://xmlns.oracle.com/bpel/workflow/TaskEvidenceService"
         xmlns:ns4="http://xmlns.oracle.com/bpel/workflow/task">

    <import namespace="http://xmlns.oracle.com/Misc/WithdrawInstances/WithdrawInstancesBPELProcess" location="WithdrawInstancesBPELProcess.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="withdrawinstancesbpelprocess_client" partnerLinkType="client:WithdrawInstancesBPELProcess" myRole="WithdrawInstancesBPELProcessProvider" partnerRole="WithdrawInstancesBPELProcessRequester"/>
        <partnerLink name="AuthenticateService"
                     partnerLinkType="ns1:AuthenticateService"
                     partnerRole="TaskQueryService"/>
        <partnerLink name="TaskService" partnerLinkType="ns3:TaskService"
                     partnerRole="TaskService"
                     myRole="TaskServiceCallbackListener"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:WithdrawInstancesBPELProcessRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:WithdrawInstancesBPELProcessResponseMessage"/>
        <variable name="Invoke_getToken_authenticate_InputVariable"
                  messageType="ns1:authenticateMessage"/>
        <variable name="Invoke_getToken_authenticate_OutputVariable"
                  messageType="ns1:authenticateResponseMessage"/>
        <variable name="Invoke_getTaskDetailsById_InputVariable"
                  messageType="ns1:taskDetailsByIdRequestMessage"/>
        <variable name="Invoke_getTaskDetailsById_OutputVariable"
                  messageType="ns1:taskDetailsResponseMessage"/>
        <variable name="Invoke_ReleaseTask_releaseTask_InputVariable"
                  messageType="ns3:releaseTaskMessage"/>
        <variable name="Invoke_ReleaseTask_releaseTask_OutputVariable"
                  messageType="ns3:taskMessage"/>
        <variable name="Invoke_acquireTask_acquireTask_InputVariable"
                  messageType="ns3:acquireTaskMessage"/>
        <variable name="Invoke_acquireTask_acquireTask_OutputVariable"
                  messageType="ns3:taskMessage"/>
        <variable name="Invoke_WithdrawnTask_withdrawTask_InputVariable"
                  messageType="ns3:withdrawTaskMessage"/>
        <variable name="Invoke_WithdrawnTask_withdrawTask_OutputVariable"
                  messageType="ns3:taskMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in WithdrawInstancesBPELProcess.wsdl) -->
        <receive name="receiveInput" partnerLink="withdrawinstancesbpelprocess_client" portType="client:WithdrawInstancesBPELProcess" operation="process" variable="inputVariable" createInstance="yes"/>
        <assign name="Assign_credentials">
            <copy>
                <from>"_svc_weblogic"</from>
                <to>$Invoke_getToken_authenticate_InputVariable.payload/ns2:login</to>
            </copy>
            <copy>
                <from>"9wpgQ7ZH"</from>
                <to>$Invoke_getToken_authenticate_InputVariable.payload/ns2:password</to>
            </copy>
            <copy>
                <from>"jazn.com"</from>
                <to>$Invoke_getToken_authenticate_InputVariable.payload/ns2:identityContext</to>
            </copy>
            <copy>
                <from>"_svc_weblogic"</from>
                <to>$Invoke_getToken_authenticate_InputVariable.payload/ns2:onBehalfOfUser</to>
            </copy>
        </assign>
        <invoke name="Invoke_getToken"
                partnerLink="AuthenticateService"
                portType="ns1:TaskQueryService" operation="authenticate"
                inputVariable="Invoke_getToken_authenticate_InputVariable"
                outputVariable="Invoke_getToken_authenticate_OutputVariable"
                bpelx:invokeAsDetail="no"/>
        <assign name="Assign_TaskDetails">
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:credential</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:credential</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:token</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:token</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:locale</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:locale</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:timeZone</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:timeZone</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:userDisplayName</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:userDisplayName</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:isAdmin</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:isAdmin</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:isBusinessAdmin</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:isBusinessAdmin</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:isManager</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:isManager</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:requester</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:requester</to>
            </copy>
            <copy>
                <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:type</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns2:workflowContext/ns2:type</to>
            </copy>
            <copy>
                <from>"01b4f379-a1ba-46b9-8213-b9199eac677b"</from>
                <to>$Invoke_getTaskDetailsById_InputVariable.payload/ns1:taskId</to>
            </copy>
        </assign>
        <invoke name="Invoke_getTaskDetailsById"
                partnerLink="AuthenticateService"
                portType="ns1:TaskQueryService" operation="getTaskDetailsById"
                inputVariable="Invoke_getTaskDetailsById_InputVariable"
                outputVariable="Invoke_getTaskDetailsById_OutputVariable"
                bpelx:invokeAsDetail="no"/>
        <if name="If_AlreadyAcquired">
            <condition>string-length($Invoke_getTaskDetailsById_OutputVariable.payload/ns4:systemAttributes/ns4:acquiredBy) = 0</condition>
            <sequence>
                <assign name="Assign_acquireTask">
                    <copy>
                        <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:token</from>
                        <to>$Invoke_acquireTask_acquireTask_InputVariable.payload/ns2:workflowContext/ns2:token</to>
                    </copy>
                    <copy>
                        <from>$Invoke_getTaskDetailsById_OutputVariable.payload/ns4:systemAttributes/ns4:taskId</from>
                        <to>$Invoke_acquireTask_acquireTask_InputVariable.payload/ns3:taskId</to>
                    </copy>
                </assign>
                <invoke name="Invoke_acquireTask" partnerLink="TaskService"
                        portType="ns3:TaskService" operation="acquireTask"
                        inputVariable="Invoke_acquireTask_acquireTask_InputVariable"
                        outputVariable="Invoke_acquireTask_acquireTask_OutputVariable"
                        bpelx:invokeAsDetail="no"/>
                <assign name="Assign_Withdrawn">
                    <copy>
                        <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:token</from>
                        <to>$Invoke_WithdrawnTask_withdrawTask_InputVariable.payload/ns2:workflowContext/ns2:token</to>
                    </copy>
                    <copy>
                        <from>$Invoke_acquireTask_acquireTask_OutputVariable.payload/ns4:systemAttributes/ns4:taskId</from>
                        <to>$Invoke_WithdrawnTask_withdrawTask_InputVariable.payload/ns3:taskId</to>
                    </copy>
                </assign>
                <invoke name="Invoke_WithdrawnTask"
                        partnerLink="TaskService"
                        portType="ns3:TaskService"
                        operation="withdrawTask"
                        inputVariable="Invoke_WithdrawnTask_withdrawTask_InputVariable"
                        outputVariable="Invoke_WithdrawnTask_withdrawTask_OutputVariable"
                        bpelx:invokeAsDetail="no"/>
            </sequence>
            <else>
                <sequence>
                    <assign name="Assign_ReleaseTask">
                        <copy>
                            <from>$Invoke_getToken_authenticate_OutputVariable.payload/ns2:token</from>
                            <to>$Invoke_ReleaseTask_releaseTask_InputVariable.payload/ns2:workflowContext/ns2:token</to>
                        </copy>
                        <copy>
                            <from>$Invoke_getTaskDetailsById_OutputVariable.payload/ns4:systemAttributes/ns4:taskId</from>
                            <to>$Invoke_ReleaseTask_releaseTask_InputVariable.payload/ns3:taskId</to>
                        </copy>
                    </assign>
                    <invoke name="Invoke_ReleaseTask"
                            partnerLink="TaskService"
                            portType="ns3:TaskService" operation="releaseTask"
                            inputVariable="Invoke_ReleaseTask_releaseTask_InputVariable"
                            outputVariable="Invoke_ReleaseTask_releaseTask_OutputVariable"
                            bpelx:invokeAsDetail="no"/>
                </sequence>
            </else>
        </if>
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="withdrawinstancesbpelprocess_client" portType="client:WithdrawInstancesBPELProcessCallback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>